// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MonsterTamersJourneyWebsite.Models;

#nullable disable

namespace MonsterTamersJourneyWebsite.Migrations
{
    [DbContext(typeof(AdminContex))]
    partial class AdminContexModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MonsterTamersJourneyWebsite.Models.Creator", b =>
                {
                    b.Property<int>("CreatorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CreatorId"));

                    b.Property<string>("AboutYou")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContentPlatforms")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherRequests")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreferedName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RequestKey")
                        .HasColumnType("bit");

                    b.Property<string>("SocialAccounts")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CreatorId");

                    b.ToTable("Creator");

                    b.HasData(
                        new
                        {
                            CreatorId = 1,
                            AboutYou = "I do Cool Stuff!",
                            ContentPlatforms = "YouTube, Facebook",
                            CreatorName = "Joe",
                            Email = "cherryinatree@gmail.com",
                            OtherRequests = "Can I get merch bro?",
                            PreferedName = "Joey",
                            RequestKey = true,
                            SocialAccounts = "Facebook"
                        });
                });

            modelBuilder.Entity("MonsterTamersJourneyWebsite.Models.FAQ", b =>
                {
                    b.Property<int>("FAQId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FAQId"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FAQId");

                    b.ToTable("FAQ");

                    b.HasData(
                        new
                        {
                            FAQId = 1,
                            Content = "Have you tried [blank]?",
                            Order = 1,
                            Title = "Why won't my game [blank]?"
                        });
                });

            modelBuilder.Entity("MonsterTamersJourneyWebsite.Models.Media", b =>
                {
                    b.Property<int>("MediaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MediaId"));

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isImage")
                        .HasColumnType("bit");

                    b.HasKey("MediaId");

                    b.ToTable("Media");

                    b.HasData(
                        new
                        {
                            MediaId = 1,
                            ImageUrl = "https://dl.dropboxusercontent.com/scl/fi/cnc0ycr7fm4fg4kpho5sd/InGame2.png?rlkey=ypkf1i0vruzv6zawgafgdam70&dl=0",
                            Order = 1,
                            Title = "Trailer",
                            VideoUrl = "https://youtu.be/uv6HXgWBnfw?si=gilVtCnkw8a7cweT",
                            isImage = false
                        },
                        new
                        {
                            MediaId = 2,
                            ImageUrl = "https://dl.dropboxusercontent.com/scl/fi/cnc0ycr7fm4fg4kpho5sd/InGame2.png?rlkey=ypkf1i0vruzv6zawgafgdam70&dl=0",
                            Order = 2,
                            Title = "Trailer",
                            VideoUrl = "https://youtu.be/uv6HXgWBnfw?si=gilVtCnkw8a7cweT",
                            isImage = true
                        });
                });

            modelBuilder.Entity("MonsterTamersJourneyWebsite.Models.News", b =>
                {
                    b.Property<int>("NewsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NewsId"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NewsId");

                    b.ToTable("News");

                    b.HasData(
                        new
                        {
                            NewsId = 1,
                            Content = "The Website is now live!",
                            ImageUrl = "https://dl.dropboxusercontent.com/scl/fi/cnc0ycr7fm4fg4kpho5sd/InGame2.png?rlkey=ypkf1i0vruzv6zawgafgdam70&dl=0",
                            Order = 1,
                            Title = "Website Released"
                        });
                });

            modelBuilder.Entity("MonsterTamersJourneyWebsite.Models.Press", b =>
                {
                    b.Property<int>("PressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PressId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainChannel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherRequests")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OutletCatagory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OutletName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RequestKey")
                        .HasColumnType("bit");

                    b.Property<string>("TwitterHandel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PressId");

                    b.ToTable("Press");

                    b.HasData(
                        new
                        {
                            PressId = 1,
                            Email = "cherryinatree@gmail.com",
                            MainChannel = "Twitter",
                            OtherRequests = "I'd like an interview.",
                            OutletCatagory = "Digital Media",
                            OutletName = "Big Press",
                            RequestKey = true,
                            TwitterHandel = "JornoWorksForBigPress",
                            name = "Jurno"
                        });
                });

            modelBuilder.Entity("MonsterTamersJourneyWebsite.Models.SupportRequest", b =>
                {
                    b.Property<int>("SupportRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupportRequestId"));

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupportEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SupportRequestId");

                    b.ToTable("SupportRequest");

                    b.HasData(
                        new
                        {
                            SupportRequestId = 1,
                            Question = "I've tried X, Y, and Z. What should I do?",
                            Subject = "My game won't load level 3",
                            SupportEmail = "cherryinatree@gmail.com"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
